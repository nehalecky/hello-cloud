# ml_models.gaussian_process.CompositePeriodicKernel { #cloud_sim.ml_models.gaussian_process.CompositePeriodicKernel }

```python
ml_models.gaussian_process.CompositePeriodicKernel(
    slow_period=1.0,
    fast_period=0.2,
    rbf_lengthscale=0.1,
    **kwargs,
)
```

Composite kernel for two-scale periodic patterns in cloud metrics.

Architecture: k_periodic(slow) + k_periodic(fast) + k_rbf

ADDITIVE structure (not multiplicative) for numerical stability.
Fixed lengthscales prevent optimization instability.

This kernel is designed to capture:
1. **Slow periodic component**: Long-period cycles (e.g., daily patterns)
2. **Fast periodic component**: Short-period cycles (e.g., hourly bursts)
3. **Smooth baseline**: Non-periodic deviations via RBF kernel

Example:
    ```python
    # For normalized timestamps in [0, 1] range
    kernel = CompositePeriodicKernel(
        slow_period=1250/X_range,  # Daily cycle
        fast_period=250/X_range,   # Hourly cycle
        rbf_lengthscale=0.1
    )
    ```

Args:
    slow_period: Period length for slow component (in normalized units)
    fast_period: Period length for fast component (in normalized units)
    rbf_lengthscale: Lengthscale for RBF kernel (controls smoothness)
    **kwargs: Additional arguments passed to parent Kernel class

Attributes:
    slow_periodic: Scaled periodic kernel for slow component
    fast_periodic: Scaled periodic kernel for fast component
    rbf: Scaled RBF kernel for baseline deviations

## Attributes

| Name | Description |
| --- | --- |
| [fast_period](#cloud_sim.ml_models.gaussian_process.CompositePeriodicKernel.fast_period) | Period length for fast periodic component. |
| [is_stationary](#cloud_sim.ml_models.gaussian_process.CompositePeriodicKernel.is_stationary) | Kernel is stationary (invariant to translations). |
| [rbf_lengthscale](#cloud_sim.ml_models.gaussian_process.CompositePeriodicKernel.rbf_lengthscale) | Lengthscale for RBF component. |
| [slow_period](#cloud_sim.ml_models.gaussian_process.CompositePeriodicKernel.slow_period) | Period length for slow periodic component. |

## Methods

| Name | Description |
| --- | --- |
| [forward](#cloud_sim.ml_models.gaussian_process.CompositePeriodicKernel.forward) | Compute covariance matrix using additive kernel combination. |

### forward { #cloud_sim.ml_models.gaussian_process.CompositePeriodicKernel.forward }

```python
ml_models.gaussian_process.CompositePeriodicKernel.forward(
    x1,
    x2,
    diag=False,
    last_dim_is_batch=False,
    **params,
)
```

Compute covariance matrix using additive kernel combination.

K(x1, x2) = K_slow(x1, x2) + K_fast(x1, x2) + K_rbf(x1, x2)

Args:
    x1: First set of inputs (n1 x d)
    x2: Second set of inputs (n2 x d)
    diag: If True, return only diagonal elements
    last_dim_is_batch: If True, last dimension is treated as batch
    **params: Additional kernel parameters

Returns:
    Covariance matrix (n1 x n2) or diagonal vector (n1,) if diag=True